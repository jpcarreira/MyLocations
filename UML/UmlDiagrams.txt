/**
 * Use case diagram
 */

@startuml Diagrams/use_case.png
left to right direction
User --> (obtain GPS location \nand physical address)
User --> (visualizes a list of all saved locations)
User --> (visualizes current and saved locations \nas pins in a map)
(obtain GPS location \nand physical address) ..> (save location) : extends 
(obtain GPS location \nand physical address) ..> (add category to location) : extends
(obtain GPS location \nand physical address) ..> (add text description) : extends
(obtain GPS location \nand physical address) ..> (add photo) : extends
(visualizes current and saved locations \nas pins in a map) ..> (add category to location) : extends
(visualizes current and saved locations \nas pins in a map) ..> (add text description) : extends
(visualizes a list of all saved locations)
@enduml 



/**
 * Class diagram
 */

@startuml Diagrams/class_diagram.png

CurrentLocationViewController -- LocationDetailsViewController
AllLocationsViewController -- LocationDetailsViewController
MapViewController -- LocationDetailsViewController
AllLocationsViewController <-- LocationCell
LocationDetailsViewController -- CategoryPickerViewController
LocationDetailsViewController -- HudView

class CurrentLocationViewController<<CLLocationManagerDelegate>>{
	+UILabel *messageLabel
	+UILabel *latitudeLabel
	+UILabel *longitudeLabel
	+UILabel *addressLabel
	+UIButton *tagButton
	+UIButton *getButton
	+NSManagedObjectContext *managedObjectContext
	-CLLocationManager *locationManager
	-CLLocation *location
	-BOOL updatingLocation
	-NSError *lastLocationError
	-CLGeocoder *geocoder
	-CLPlacemark *placemark
	-BOOL performingReverseGeocoding
	-NSError *lastGeocodingError
	__
	+(IBAction)getLocation:(id)sender
	-(void)viewDidLoad
	-(void)didReceiveMemoryWarning
	-(BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation *)toInterfaceOrientation
	-(void)viewDidUnload
	-(void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
	.. <b>inits</b> ..
	-(id)initWithCoder:(NSCoder *)aDecoder
	.. <b>instance methods</b> ..
	-(void)configureGetButton
	-(void)updateLabels
	-(NSString *)stringFromPlacemark:(CLPlacemark *)thePlacemark
	-(void)startLocationManager
	-(void)stopLocationManager
	-(void)didTimeOut:(id)obj
	.. <b>CLLocationManager delegate methods</b> ..
	-(void)locationManager:(CLLocationManager *)manager didFailWithError:(NSError *)error
	-(void)locationManager:(CLLocationManager *)manager didUpdateToLocation:(CLLocation *)newLocation fromLocation:(CLLocation *)oldLocation
}

class LocationDetailsViewController<<UITextViewDelegate, CategoryPickerViewControllerDelegate>>{
	+UITextView *descriptionTextView
	+UILabel *categoryLabel
	+UILabel *latitudeLabel
	+UILabel *longitudeLabel
	+UILabel *addressLabel
	+UILabel *dateLabel
	+CLLocationCoordinate2D coordinate
	+CLPlacemark *placemark
	+NSManagedObjectContext *managedObjectContext
	+Location *locationToEdit
	+UIImageView *imageView
	+UILabel *photoLabel
	-NSString *descriptionText
	-NString *categoryName
	-NSDate *date
	-UIImage *image
	-UIActionSheet *actionSheet
	-UIImagePickerController *imagePicker
	__
	+(IBAction)done:(id)sender
	+(IBAction)cancel:(id)sender
	-(id)initWithCoder:(NSCoder *)aDecoder
	-(void)dealloc
	-(void)viewDidLoad
	-(void)didReceiveMemoryWarning
	-(void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
	.. <b>instance methods</b> ..
	-(void)closeScreen
	-(NSString *)stringFromPlacemark:(CLPlacemark *)thePlacemark
	-(NSString *)formatDate:(NSDate *)theDate
	-(void)hideKeyboard:(UIGestureRecognizer *)gestureRecognizer
	-(void)setLocationToEdit:(Location *)newLocationToEdit
	-(void)showPhotoMenu
	-(void)choosePhotoFromLibrary
	-(void)takePhoto
	-(void)showImage:(UIImage *)theImage
	-(void)applicationDidEnterBackground
	-(int)nextPhotoId
	.. <b>UITableView delegate methods </b> ..
	-(CGFloat)tableView:(UITableView *)theTableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
	-(NSIndexPath *)tableView:(UITableView *)tableView willSelectRowAtIndexPath:(NSIndexPath *)indexPath
	-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
	.. <b>UITextView delegate methods </b> ..
	-(BOOL)textView:(UITextView *)theTextView shouldChangeTextInRange:(NSRange *)range replacementText:(NSString *)text
	-(void)textViewDidEndEditing:(UITextView *)theTextView
	-(void)categoryPicker:(CategoryPickerViewController *)picker didPickCategory:(NSString *)theCategoryName
	.. <b>UIImagePickerController delegate methods </b> ..
	-(void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
	-(void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
	.. <b>UIActionSheet delegate methods </b> ..
	-(void)actionSheet:(UIActionSheet *)actionSheet didDismissWithButtonIndex:(NSInteger)buttonIndex
}

class CategoryPickerViewController{
	+id<CategoryPickerViewControllerDelegate> delegate
	+NSString *selectedCategoryName
	-NSArray *categories
	-NSIndexPath *selectedIndexPath
	__
	+(void)categoryPicker:(CategoryPickerViewController *)picker didPickCategory:(NSString *)categoryName
	-(void)viewDidLoad
	-(void)didReceiveMemoryWarning 
	-(BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation *)toInterfaceOrientation
	.. <b>TableView datasource</b> .. 
	-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
	-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
	-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
	.. <b>TableView delegate</b> ..
	-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
}

class HudView{
	+NSString *text
	__
	.. <b>class method</b> ..
	+(HudView *)hudInView:(UIView *)view animated:(BOOL)animated
	__
	-(void)drawRect:(CGRect)rect
	-(void)showAnimated:(BOOL)animated
}

class AllLocationsViewController<<NSFetchedResultsControllerDelegate>>{
	+NSManagedObjectContext *managedObjectContext
	-NSFetchedResultsController *fetchedResultsController
	__
	-(id)initWithStyle:(UITableViewStyle *)style
	-(void)viewDidLoad
	-(void)didReceiveMemoryWarning
	-(void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
	-(void)dealloc
	.. <b>UITableView Data Source</b> .. 
	-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
	-(NSString *)tableView:(TableView *)tableView titleForHeaderInSection:(NSInteger)section
	-(NSString *)tableView:(TableView *)tableView numberOfRowsInSection:(NSInteger)section
	-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
	-(void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
	.. <b>class methods</b> ..
	-(void)configureCell:(UITableViewCell *)cell atIndexPath:(NSIndexPath *)indexPath
	-(NSFetchedResultsController *)fetchedResultsController
	-(void)performFetch
	.. <b>TableView delegate</b> ..
	-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
	.. <b>NSFecthedResultsController delegate</b> ..
	-(void)controllerWillChangeContent:(NSFetchedResultsController *)controller
	-(void)controller:(NSFetchedResultsController *)controller didChangeObject:(id)anObject atIndexPath:(NSIndexPath *)indexPath forChangeType:(NSFetchedResultsChangeType)type newIndexPath:(NSIndexPath *)indexPath
	-(void)controller:(NSFetchedResultsController *)controller didChangeSection:(id<NSFetchedResultsSectionInfo>)sectionInfo atIndex:(NSUInteger)sectionIndex forChangeType:(NSFetchedResultsChangeType)type
	-(void)controllerDidChangeContent:(NSFetchedResultsController *)controller
}

class Location<<NSManagedObject>>{
	+NSNumber *latitude
	+NSNumber *longitude
	+NSDate *date
	+NSString *locationDescription
	+NSString *category
	+CLPlacemark *placemark
	+NSNumber *photoId
	__
	-(CLLocationCoordinate2D)coordinate
	-(NSString *)title
	-(NSString *)subtitle
	-(BOOL)hasPhoto
	-(NSString *)photoPath
	-(NSString *)documentsDirectory
	-(UIImage *)photoImage
	-(void)removePhotoFile

}

class LocationCell{
	+UILabel *descriptionLabel;
	+UILabel *addressLabel;
	+UIImageView *imageView
	__
	- (id)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier
	- (void)setSelected:(BOOL)selected animated:(BOOL)animated
}

class MapViewController{
	+NSManagedObjectContext *managedObjectContext
	+MKMapView *mapView
	-NSArray *locations
	__
	-(id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
	-(id)initWithCoder:(NSCoder *)aDecoder
	-(void)viewDidLoad
	-(void)didReceiveMemoryWarning
	-(void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)segue
	-(void)dealloc
	..<b>class methods</b>..
	-(void)updateLocations
	-(MKCoordinateRegion)regionForAnnotations:(NSArray *)annotations
	-(void)showLocationDetails:(UIButton *)button
	-(void)contextDidChange:(NSNotification *)notification
	..<b>MKMapViewDelegate</b>..
	-(MKAnnotationView *)mapView:(MapView *)mapView viewForAnnotation:(id<MKAnnotation>)annotation
	..<b>IBActions</b>..
	+(IBAction)showUser
	+(IBAction)showLocations

}

class UIImage+Resize{
	-(UIImage *)resizedImageWithBounds:(CGSize)bounds;
}
@enduml



/**
 * Sequence diagram - obtain GPS location and physical address
 */
@startuml Diagrams/sd_obtainGpsCoordinatesAndPhysicalAddress
CurrentLocationUI -> CurrentLocationViewController: getLocation:(id)sender
alt updatingLocation == YES
	CurrentLocationViewController -> CurrentLocationViewController: stopLocationManager
else updatingLocation == NO
	CurrentLocationViewController -> CurrentLocationViewController: startLocationManager
	alt locationServicesEnabled == YES
		CurrentLocationViewController -> CLLocationManager: delegate = self
		CurrentLocationViewController -> CLLocationManager: desiredAccuracy = kCLLocationAccuracyNearestTenMeters
		CurrentLocationViewController -> CLLocationManager: startUpdatingLocation
		CurrentLocationViewController -> CurrentLocationViewController: updatingLocation = YES
		CurrentLocationViewController -> CurrentLocationViewController: didTimeOut
	end
	CurrentLocationViewController -> CurrentLocationViewController: updateLabels
	CurrentLocationViewController -> CurrentLocationViewController: configureGetButton
end

@enduml

